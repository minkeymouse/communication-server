{
  "name": "communication-server-mcp",
  "version": "2.2.0",
  "description": "Enhanced email-like messaging for AI agents with cryptographic identification, bulk operations, and account management",
  "main": "dist/index.js",
  "type": "module",
  "bin": {
    "communication-server-mcp": "dist/index.js"
  },
  "scripts": {
    "build": "tsc",
    "dev": "tsc && node dist/index.js",
    "start": "node dist/index.js",
    "start:unique": "NODE_ENV=production MCP_SERVER_ID=comm-server-$(date +%s) node dist/index.js",
    "kill-all": "pkill -f 'node.*dist/index.js' || true",
    "restart": "npm run kill-all && sleep 1 && npm run start:unique",
    "start:clean": "npm run kill-all && sleep 2 && npm run start:unique",
    "start:clean-db": "./scripts/start-clean.sh",
    "test": "echo 'Testing via JSONRPC stdin/stdout' && echo '{\"jsonrpc\": \"2.0\", \"id\": 1, \"method\": \"tools/list\", \"params\": {}}' | timeout 10s node dist/index.js",
    "test-tool": "echo '{\"jsonrpc\": \"2.0\", \"id\": 2, \"method\": \"tools/call\", \"params\": {\"name\": \"get_server_health\", \"arguments\": {\"random_string\": \"test\"}}}' | timeout 10s node dist/index.js",
    "test-quick": "timeout 5s bash -c 'echo \"{\\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": 1, \\\"method\\\": \\\"tools/call\\\", \\\"params\\\": {\\\"name\\\": \\\"get_server_health\\\", \\\"arguments\\\": {\\\"random_string\\\": \\\"test\\\"}}}' | node dist/index.js'"
  },
  "keywords": [
    "mcp",
    "communication",
    "agents",
    "messaging",
    "ai",
    "protocol",
    "cryptographic-identity",
    "bulk-operations",
    "account-management"
  ],
  "author": "Communication Server Team",
  "license": "MIT",
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.17.4",
    "better-sqlite3": "^9.4.3",
    "communication-server-mcp": "^2.1.3",
    "uuid": "^10.0.0"
  },
  "devDependencies": {
    "@types/better-sqlite3": "^7.6.9",
    "@types/node": "^20.0.0",
    "@types/uuid": "^10.0.0",
    "tsx": "^4.20.5",
    "typescript": "^5.0.0"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/minkeymouse/communication-server-mcp.git"
  },
  "bugs": {
    "url": "https://github.com/minkeymouse/communication-server-mcp/issues"
  },
  "homepage": "https://github.com/minkeymouse/communication-server-mcp#readme",
  "mcp": {
    "name": "communication-server",
    "version": "2.1.2",
    "description": "Enhanced email-like messaging for AI agents with cryptographic identification, bulk operations, and account management",
    "transport": "stdio",
    "capabilities": {
      "tools": true
    }
  },
  "smithery": {
    "deploymentType": "local-only",
    "cloudDeployment": false,
    "scanEnabled": false,
    "localInstallationOnly": true,
    "installCommand": "npm install communication-server-mcp",
    "runCommand": "npx communication-server-mcp"
  }
}
